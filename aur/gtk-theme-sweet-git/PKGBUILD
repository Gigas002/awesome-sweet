# Maintainer: gigas002 <gigas002@pm.me>
# Maintainer: dr460nf1r3 <aur@dr460nf1r3.org>

pkgname=gtk-theme-sweet-git
_pkgname=Sweet
pkgver=r306.de001f0
pkgrel=1
pkgdesc="Sweet KDE Plasma theme"
arch=('x86_64')
url="https://github.com/EliverLara/$_pkgname"
license=('GPL-3.0-or-later')
makedepends=(
    'git'
    'inkscape'
    'optipng'
)
depends=()
optdepends=(
    'ttf-roboto: primary font face defined'
    'ttf-ubuntu-font-family: secondary font face defined'
)
conflicts=(
    'plasma5-themes-sweet-full-git'
    'sweet-gtk-theme-dark'
    'sweet-gtk-theme'
    'sweet-theme-git'
)
options=('!strip')
source=("git+$url.git")
sha256sums=('SKIP')

pkgver() {
    cd $srcdir/$_pkgname
    printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}


build() {
    cd "$srcdir/$_pkgname"

    export THEME_FONT_FACE=${THEME_FONT_FACE:-Roboto}
    export THEME_FONT_SIZE=${THEME_FONT_SIZE:-10}

    msg2 "To customize the font and size for gnome-shell, build this package"
    msg2 "with the variables below set to the desired font family and size"
    msg2 "- THEME_FONT_FACE (default font family is Roboto)"
    msg2 "- THEME_FONT_SIZE (default font point size is 10)"

    msg2 "Rendering gtk assets, please wait"

    # gtk-2.0 assets
    cd "$srcdir/$_pkgname/gtk-2.0"
    while read $line; do echo -n "."; done < \
        <(./render-assets.sh 2>/dev/null); echo

    # gtk-3.0 assets
    cd "$srcdir/$_pkgname/src"
    while read $line; do echo -n "."; done < \
        <(./render-gtk3-assets.py 2>/dev/null; \
        ./render-gtk3-assets-hidpi.py 2>/dev/null; \
        ./render-wm-assets-hidpi.py 2>/dev/null; \
        ./render-wm-assets.py 2>/dev/null); echo

    if [ "$THEME_FONT_FACE" != "Roboto" ]; then
        msg2 "Setting gnome-shell font face to $THEME_FONT_FACE"
        sed -i -re "s/font-family: (.*);/font-family: $THEME_FONT_FACE, \1;/" \
            "$srcdir/$_pkgname/gnome-shell/gnome-shell.css"
    fi

    if [ $THEME_FONT_SIZE != "10" ]; then
        msg2 "Setting gnome-shell font size to $THEME_FONT_SIZE"
        sed -i -re "s/font-size: (.*);/font-size: $THEME_FONT_SIZEpt;/" \
            "$srcdir/$_pkgname/gnome-shell/gnome-shell.css"
    fi

    msg2 "Done!"
}

package() {
    install -d "$pkgdir/usr/share/themes/Sweet"

    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/assets" "$srcdir/$_pkgname/assets"/*
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet" "$srcdir/$_pkgname/index.theme"

    cp -R "$srcdir/$_pkgname/cinnamon" "$pkgdir/usr/share/themes/Sweet/cinnamon"

    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gnome-shell" "$srcdir/$_pkgname/gnome-shell/gnome-shell.css"
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gnome-shell/assets" "$srcdir/$_pkgname/gnome-shell/assets"/*

    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-2.0" "$srcdir/$_pkgname/gtk-2.0/gtkrc"
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-2.0" "$srcdir/$_pkgname/gtk-2.0/main.rc"
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-2.0/apps" "$srcdir/$_pkgname/gtk-2.0/apps"/*
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-2.0/assets" "$srcdir/$_pkgname/gtk-2.0/assets"/*
    
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-3.0" "$srcdir/$_pkgname/gtk-3.0/gtk-dark.css"
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-3.0" "$srcdir/$_pkgname/gtk-3.0/gtk.css"
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-3.0" "$srcdir/$_pkgname/gtk-3.0/thumbnail.png"

    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-4.0" "$srcdir/$_pkgname/gtk-4.0/gtk-dark.css"
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-4.0" "$srcdir/$_pkgname/gtk-4.0/gtk.css"
    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/gtk-4.0" "$srcdir/$_pkgname/gtk-4.0/thumbnail.png"

    install -Dm644 -t "$pkgdir/usr/share/themes/Sweet/metacity-1" "$srcdir/$_pkgname/metacity-1"/*

    cp -R "$srcdir/$_pkgname/xfwm4" "$pkgdir/usr/share/themes/Sweet/xfwm4"
}
